{
  "name": "parse-react",
  "version": "0.5.0",
  "description": "Use Parse data in React applications",
  "homepage": "https://github.com/ParsePlatform/ParseReact",
  "keywords": [
    "parse",
    "react",
    "data",
    "api",
    "observable"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/ParsePlatform/ParseReact"
  },
  "bugs": {
    "url": "https://github.com/ParsePlatform/ParseReact/issues"
  },
  "files": [
    "index.js",
    "react-native.js",
    "lib/",
    "LICENSE",
    "README.md"
  ],
  "browser": {
    "react-native": false
  },
  "devDependencies": {
    "babel-jest": "~5.3.0",
    "babelify": "~6.3.0",
    "browserify": "~9.0.3",
    "bundle-collapser": "~1.1.4",
    "envify": "~3.2.0",
    "gulp": "~3.8.11",
    "gulp-babel": "~5.2.0",
    "gulp-derequire": "~2.0.0",
    "gulp-insert": "~0.4.0",
    "gulp-replace": "^0.5.3",
    "gulp-uglify": "~1.1.0",
    "jest-cli": "~0.5.0",
    "parse": "~1.6.0",
    "vinyl-buffer": "~1.0.0",
    "vinyl-source-stream": "~1.0.0"
  },
  "scripts": {
    "test": "NODE_ENV=test jest"
  },
  "jest": {
    "rootDir": "src",
    "scriptPreprocessor": "../node_modules/babel-jest"
  },
  "readme": "# Parse + React\n\nSeamlessly bringing Parse data into your React applications.\n\n[![Build Status](https://travis-ci.org/ParsePlatform/ParseReact.svg?branch=master)](https://travis-ci.org/ParsePlatform/ParseReact) [![npm version](https://badge.fury.io/js/parse-react.svg)](http://badge.fury.io/js/parse-react)\n\n## Overview\n\nParse + React is an interface layer on top of the\n[Parse JS SDK](https://parse.com/docs/js_guide) that provides simple access to\nthe Parse API from [React](http://facebook.github.io/react/). It lets React\ncomponents subscribe to Parse queries, and allows data mutations to be\ndispatched in a Flux-style manner. In the background, these subscriptions are\nmanaged in a way that lets these components automatically update as objects are\ncreated and modified, allowing user interfaces to be snappy and responsive.\n\n### [Full API](/docs/api/)\n\n## Example\n\nTo add Parse data to a component, it simply needs to subscribe to a standard\nParse Query. This is done through an implementation of the [newly-proposed\n`observe()` API](https://github.com/facebook/react/issues/3398) for React. The\nParseReact Mixin allows a version of this new lifecycle method to be used today\nwith Parse Queries.\n\nIf you're using React with ES6 classes, we also provide a [subclass of\n`React.Component`](/docs/api/ES6.md) that allows you to use the\n`observe()` and Query-specific APIs.\n\n```js\nvar CommentBlock = React.createClass({\n  mixins: [ParseReact.Mixin], // Enable query subscriptions\n\n  observe: function() {\n    // Subscribe to all Comment objects, ordered by creation date\n    // The results will be available at this.data.comments\n    return {\n      comments: (new Parse.Query('Comment')).ascending('createdAt')\n    };\n  },\n\n  render: function() {\n    // Render the text of each comment as a list item\n    return (\n      <ul>\n        {this.data.comments.map(function(c) {\n          return <li>{c.text}</li>;\n        })}\n      </ul>\n    );\n  }\n});\n```\n\nWhenever this component mounts, it will issue the query and the results will be\nattached to `this.data.comments`. Each time the query is re-issued, or objects\nare modified locally that match the query, it will update itself to reflect\nthese changes.\n\nMutations are dispatched in the manner of\n[Flux](http://facebook.github.io/flux/) Actions, allowing updates to be\nsynchronized between many different components without requiring views to talk\nto each other. All of the standard Parse data mutations are supported, and you\ncan read more about them in the [Data Mutation](/docs/DataMutations.md) guide.\n\n```js\n// Create a new Comment object with some initial data\nParseReact.Mutation.Create('Comment', {\n  text: 'Parse <3 React'\n}).dispatch();\n```\n\n## Getting Started\n\nYou can download Parse + React from [within this Github repo](/dist/). It's\nalso available [on our CDN](https://www.parsecdn.com/js/parse-react.js)\n([minified](https://www.parsecdn.com/js/parse-react.min.js)), and on\n[npm](https://www.npmjs.com/package/parse-react).\n\nIf you're not familiar with React, we recommend you first walk through their\n[tutorials](http://facebook.github.io/react/docs/tutorial.html) before adding\nParse data to your React applications.\n\nParse + React adds new functionality when React and the Parse JS SDK are used\ntogether, and it requires that those libraries be in place before it is\ninitialized. The easiest way to do this is to load them on your page before\nloading the Parse + React library:\n\n```html\n<html>\n  <head>\n    <script src=\"http://fb.me/react-0.13.3.min.js\"></script>\n    <script src=\"https://www.parsecdn.com/js/parse-latest.js\"></script>\n    <!-- Now include parse-react.js -->\n    <script src=\"https://www.parsecdn.com/js/parse-react.js\"></script>\n\n    ...\n```\n\nIf you're using a tool like Webpack or Browserify to enable Common JS `require`\nstatements, you need to make sure you also include the `'parse'` npm package\nin your dependencies.\n\n```js\nvar React = require('react');\nvar Parse = require('parse');\nvar ParseReact = require('parse-react');\n\n// ...\n```\n\nAs of version 1.6, the Parse JS SDK has a different build for React Native.\nIf you're using Parse+React on React Native, you'll need to require the\n`'parse-react/react-native'` package instead.\n\n```js\n// For React Native apps\nvar React = require('react-native');\nvar Parse = require('parse/react-native');\nvar ParseReact = require('parse-react/react-native');\n```\n\nNow that you've included all of the necessary libraries, you're ready to start\n[subscribing to Parse data](/docs/Subscriptions.md) and\n[mutating it](/docs/DataMutations.md).\n\n## Contributing\n\nSee the CONTRIBUTING file for information on how to help out.\n\n## License\n\nCopyright (c) 2015, Parse, LLC. All rights reserved.\n\nYou are hereby granted a non-exclusive, worldwide, royalty-free license to use, copy, modify, and distribute this software in source code or binary form for use in connection with the web services and APIs provided by Parse.\n\nAs with any software that integrates with the Parse platform, your use of this software is subject to the Parse Terms of Service [https://www.parse.com/about/terms]. This copyright notice shall be included in all copies or substantial portions of the software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "parse-react@0.5.0",
  "dist": {
    "shasum": "b0280f40c53c72d230b94ee2e96ee2a56bda9857"
  },
  "_from": "parse-react@",
  "_resolved": "https://registry.npmjs.org/parse-react/-/parse-react-0.5.0.tgz"
}
